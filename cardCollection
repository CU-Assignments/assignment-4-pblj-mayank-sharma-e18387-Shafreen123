import java.util.*;

public class CardCollection {
    private Map<String, List<String>> cardMap;

    public CardCollection() {
        cardMap = new HashMap<>();
    }

    public void addCard(String symbol, String card) {
        cardMap.putIfAbsent(symbol, new ArrayList<>());
        cardMap.get(symbol).add(card);
    }

    public List<String> getCardsBySymbol(String symbol) {
        return cardMap.getOrDefault(symbol, new ArrayList<>());
    }

    public void displayCards() {
        System.out.println("\nCurrent Card Collection:");
        for (Map.Entry<String, List<String>> entry : cardMap.entrySet()) {
            System.out.println(entry.getKey() + ": " + entry.getValue());
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        CardCollection collection = new CardCollection();
        collection.addCard("Hearts", "Ace");
        collection.addCard("Hearts", "King");
        collection.addCard("Spades", "Queen");
        collection.addCard("Diamonds", "Jack");
        collection.addCard("Clubs", "10");

        while (true) {
            System.out.println("\n1. Add Card  2. Search Cards by Symbol  3. Display Collection  4. Exit");
            System.out.print("Enter your choice: ");
            int choice = sc.nextInt();
            sc.nextLine(); 

            switch (choice) {
                case 1:
                    System.out.print("Enter Symbol (e.g., Hearts, Spades): ");
                    String symbol = sc.nextLine();
                    System.out.print("Enter Card Name: ");
                    String card = sc.nextLine();
                    collection.addCard(symbol, card);
                    System.out.println("Card added successfully!");
                    break;
                case 2:
                    System.out.print("Enter Symbol to search: ");
                    symbol = sc.nextLine();
                    List<String> cards = collection.getCardsBySymbol(symbol);
                    if (!cards.isEmpty()) {
                        System.out.println("Cards in " + symbol + ": " + cards);
                    } else {
                        System.out.println("No cards found for symbol: " + symbol);
                    }
                    break;
                case 3:
                    collection.displayCards();
                    break;
                case 4:
                    System.out.println("Exiting...");
                    sc.close();
                    return;
                default:
                    System.out.println("Invalid choice. Try again.");
            }
        }
    }
}
